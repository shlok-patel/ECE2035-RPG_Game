#include "graphics.h"

#include "globals.h"

// Player Sprite
void draw_player(int u, int v, int key)
{
    static int player_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff9302, 0xff323633, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff9302, 0xff14491f, 0xff14491f, 0xff5f4118, 0xff975b09, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffffc06b, 0xffdb810a, 0xff14491f, 0xff4b4b4b, 0xff272726, 0xff353636, 0xff4b4b4b, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffe4c9a5, 0xffff9302, 0xff4b4b4b, 0xff000000, 0xff555554, 0xff000000, 0xff7f7f7d, 0xff545452, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffffc06b, 0xffdb810a, 0xff282928, 0xff000000, 0xff454543, 0xff000000, 0xff444543, 0xff2a2a29, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffe4c9a5, 0xffdb810a, 0xff4e4e4e, 0xff000000, 0xff515151, 0xff000000, 0xff515151, 0xff3e3e3e, 0xff14491f, 0xff14491f,
            0xffa5dbe4, 0xff15d1f3, 0xff15d1f3, 0xffa5dbe4, 0xff595959, 0xff555555, 0xff696969, 0xff454545, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff081329, 0xff08101e, 0xff0f0e0e, 0xff191919, 0xff6e6e6e, 0xff6c6c6c, 0xff262625, 0xff0f0f0f, 0xff2c2d25, 0xff14491f,
            0xff14491f, 0xff15d1f3, 0xff15d1f3, 0xff282726, 0xff403e3d, 0xff161513, 0xff181715, 0xff393736, 0xff282726, 0xff0d0c0a, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff1a1918, 0xff222120, 0xff2e2d2b, 0xff2e2e2a, 0xff201f1e, 0xff161615, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff393837, 0xff313230, 0xff14491f, 0xff14491f, 0xff131310, 0xff1b1b16, 0xff14491f, 0xff14491f
        }
    };
    uLCD.BLIT(58, 59, 11, 11, &player_sprite[0][0]);
}

void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++) {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    // Fill a tile with background green
    uLCD.filled_rectangle(u, v, u+10, v+10, 0x14491f);
}

// trees for surrounding wall on map 0
void draw_wall1(int u, int v)
{
    static int tree_sprite[1][121] = {
        {
            0xff1f4914, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff1f4914,
            0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46,
            0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d, 0xff40bd46, 0xff17961d,
            0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f,
            0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216,
            0xff1f4914, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff3c853f, 0xff117216, 0xff1f4914,
            0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff754b43, 0xff754b43, 0xff754b43, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914,
            0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff754b43, 0xff754b43, 0xff754b43, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914,
            0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff754b43, 0xff754b43, 0xff754b43, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914,
            0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff754b43, 0xff754b43, 0xff754b43, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914,
            0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff754b43, 0xff754b43, 0xff754b43, 0xff1f4914, 0xff1f4914, 0xff1f4914, 0xff1f4914
        }
    };

    uLCD.BLIT(u, v, 11, 11, &tree_sprite[0][0]);
}

// gray bricks for dungeon maze on map 1
void draw_wall2(int u, int v)
{
    static int dungeonwall_sprite[1][121] = {
        {
            0xff7f786e, 0xff000000, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff000000, 0xff7f786e, 0xff7f786e, 0xff7f786e,
            0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d,
            0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
            0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000,
            0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000,
            0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
            0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d,
            0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d,
            0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000,
            0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff6e675d, 0xff000000,
            0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff000000, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff7f786e, 0xff000000
        }
    };

    uLCD.BLIT(u, v, 11, 11, &dungeonwall_sprite[0][0]);
}

// river blocking access until quest 1 complete
void draw_river(int u, int v)
{
    static int river_sprite[1][121] = {
        {
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe,
            0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe, 0xff3d6dfe
        }
    };

    uLCD.BLIT(u, v, 11, 11, &river_sprite[0][0]);
}

// sprite for waypoint
void draw_flag(int u, int v)
{
    static int flag_sprite[1][121] = {
        {
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xff007cff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xffffffff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff007cff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f
        }
    };

    uLCD.BLIT(u, v, 11, 11, &flag_sprite[0][0]);
}

// plants for moving scenery
void draw_plant(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, GREEN);
}

// first gate openable after completing first quest
void draw_gate1(int u, int v)
{
    static int gate1_sprite[1][121] = {
        {
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070
        }
    };
    uLCD.BLIT(u, v, 11, 11, &gate1_sprite[0][0]);
}

// second gate openable after collecting the key in the second quest
void draw_gate2(int u, int v)
{
    static int gate2_sprite[1][121] = {
        {
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22,
            0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070, 0xff228b22, 0xff908070
        }
    };
    uLCD.BLIT(u, v, 11, 11, &gate2_sprite[0][0]);
}

// NPC sprite
void draw_NPC(int u, int v)
{
    static int NPC_sprite[1][121] = {
        {
            0xff228b22, 0xff228b22, 0xff228b22, 0xff922a48, 0xff922a48, 0xff922a48, 0xff922a48, 0xff922a48, 0xff228b22, 0xff228b22, 0xff228b22,
            0xff228b22, 0xff922a48, 0xff922a48, 0xffc65878, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffc65878, 0xff922a48, 0xff922a48, 0xff228b22,
            0xff228b22, 0xff922a48, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffe684a0, 0xffc65878, 0xff922a48, 0xff228b22,
            0xff922a48, 0xffc65878, 0xffe684a0, 0xffe684a0, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xffe684a0, 0xffe684a0, 0xffc65878, 0xff922a48,
            0xff922a48, 0xffc65878, 0xffc65878, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xffc65878, 0xffc65878, 0xff922a48,
            0xff922a48, 0xffe684a0, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xffe684a0, 0xff922a48,
            0xff922a48, 0xffc65878, 0xffc65878, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xffc65878, 0xffc65878, 0xff922a48,
            0xff922a48, 0xffc65878, 0xffe684a0, 0xffe684a0, 0xffe684a0, 0xff520c20, 0xffe684a0, 0xffe684a0, 0xffe684a0, 0xffc65878, 0xff922a48,
            0xff228b22, 0xff922a48, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffe684a0, 0xffc65878, 0xff922a48, 0xff228b22,
            0xff228b22, 0xff922a48, 0xff922a48, 0xffc65878, 0xffc65878, 0xffe684a0, 0xffc65878, 0xffc65878, 0xff922a48, 0xff922a48, 0xff228b22,
            0xff228b22, 0xff228b22, 0xff228b22, 0xff922a48, 0xff922a48, 0xff922a48, 0xff922a48, 0xff922a48, 0xff228b22, 0xff228b22, 0xff228b22
        }
    };
    uLCD.BLIT(u, v, 11, 11, &NPC_sprite[0][0]);
}

// slime sprite
void draw_slime(int u, int v)
{
    static int slime_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff3ea821, 0xff3ea821, 0xff76f553, 0xff76f553, 0xff76f553, 0xff3ea821, 0xff3ea821, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff3ea821, 0xff3ea821, 0xff76f553, 0xff000000, 0xffc0ffae, 0xffc0ffae, 0xff000000, 0xff3ea821, 0xff3ea821, 0xff14491f,
            0xff14491f, 0xff3ea821, 0xff76f553, 0xff000000, 0xff000000, 0xffc0ffae, 0xff000000, 0xff000000, 0xff76f553, 0xff3ea821, 0xff14491f,
            0xff14491f, 0xff3ea821, 0xff76f553, 0xffc0ffae, 0xffc0ffae, 0xffc0ffae, 0xffc0ffae, 0xffc0ffae, 0xff76f553, 0xff3ea821, 0xff14491f,
            0xff14491f, 0xff3ea821, 0xff76f553, 0xff76f553, 0xff76f553, 0xff76f553, 0xff000000, 0xff76f553, 0xff76f553, 0xff3ea821, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff3ea821, 0xff14491f, 0xff14491f
        }
    };
    uLCD.BLIT(u, v, 11, 11, &slime_sprite[0][0]);
}

// ghost sprite
void draw_ghost(int u, int v)
{
    static int ghost_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff14491f,
            0xff14491f, 0xffffffff, 0xff14491f, 0xffffffff, 0xff14491f, 0xffffffff, 0xff14491f, 0xffffffff, 0xff14491f, 0xffffffff, 0xff14491f
        }
    };
    uLCD.BLIT(u, v, 11, 11, &ghost_sprite[0][0]);
}

// portal for going back and forth between maps
void draw_portal(int u, int v)
{
    static int portal_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xff470f38, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xff470f38, 0xff470f38, 0xff470f38, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff00ba, 0xff470f38, 0xff470f38, 0xffff06bc, 0xff470f38, 0xff470f38, 0xffff00ba, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff00ba, 0xff470f38, 0xffff06bc, 0xffff06bc, 0xffff06bc, 0xff470f38, 0xffff00ba, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff00ba, 0xff470f38, 0xff470f38, 0xffff06bc, 0xff470f38, 0xff470f38, 0xffff00ba, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xff470f38, 0xff470f38, 0xff470f38, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xff470f38, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xffff00ba, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff00ba, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f
        }
    };

    uLCD.BLIT(u, v, 11, 11, &portal_sprite[0][0]);
}

// key for opening gate2
void draw_key(int u, int v)
{
    static int key_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, YELLOW, YELLOW, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, 0xff14491f, YELLOW, YELLOW, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, YELLOW, YELLOW, YELLOW, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            YELLOW, YELLOW, YELLOW, YELLOW, 0xff14491f, YELLOW, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            YELLOW, 0xff14491f, 0xff14491f, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            YELLOW, 0xff14491f, 0xff14491f, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            YELLOW, YELLOW, YELLOW, YELLOW, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f
        }
    };

    uLCD.BLIT(u, v, 11, 11, &key_sprite[0][0]);
}

// rock that can be moved away from door after quest 1
void draw_rock(int u, int v)
{
    static int rock_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282,
            0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282,
            0xff14491f, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282,
            0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282,
            0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282,
            0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282, 0xff898282
        }
    };

    uLCD.BLIT(u, v, 11, 11, &rock_sprite[0][0]);
}

// heart item that increases players lives
void draw_heart(int u, int v)
{
    static int heart_sprite[1][121] = {
        {
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff0000, 0xffff0000, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff0000, 0xffff0000, 0xff14491f, 0xff14491f,
            0xff14491f, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xff14491f, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xff14491f,
            0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000,
            0xffff0000, 0xffff0000, 0xffff0000, 0xff0f00ff, 0xffff0000, 0xffff0000, 0xffff0000, 0xff0f00ff, 0xffff0000, 0xffff0000, 0xffff0000,
            0xffff0000, 0xffff0000, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xffff0000, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xffff0000, 0xffff0000,
            0xff14491f, 0xffff0000, 0xffff0000, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xffff0000, 0xffff0000, 0xff14491f,
            0xff14491f, 0xff14491f, 0xffff0000, 0xffff0000, 0xff0f00ff, 0xff0f00ff, 0xff0f00ff, 0xffff0000, 0xffff0000, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xffff0000, 0xffff0000, 0xff0f00ff, 0xffff0000, 0xffff0000, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff0000, 0xffff0000, 0xffff0000, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f,
            0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xffff0000, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f, 0xff14491f
        }
    };

    uLCD.BLIT(u, v, 11, 11, &heart_sprite[0][0]);
}

// upper status holds player coordinates
void draw_upper_status(int x, int y)
{
    uLCD.filled_rectangle(0,8,48,0,BLACK);
    // Add other status info drawing code here

    uLCD.textbackground_color(BLACK);
    uLCD.color(GREEN);

    //add player coordinates
    uLCD.locate(0,0);
    uLCD.printf("(%d,",x);
    uLCD.color(GREEN);
    uLCD.locate(4,0);
    uLCD.printf("%d)",y);
}

void draw_slimeCount(int SC)
{
    uLCD.textbackground_color(BLACK);
    uLCD.color(GREEN);

    uLCD.locate(7,0);
    uLCD.printf("Slimes: %d/5", SC);
}

void clear_slimeCount()
{
    uLCD.filled_rectangle(50,0,127,8,BLACK);
}

void draw_lifeCount(int pL)
{
    uLCD.textbackground_color(BLACK);
    uLCD.color(RED);

    uLCD.locate(7,0);
    uLCD.printf("Lives: %d/3", pL);
}

void clear_lifeCount()
{
    uLCD.filled_rectangle(50,0,127,8,BLACK);
}

// lower status holds player health bar and omni_mode icon if enabled
void draw_lower_status(int pH, int pHH)
{
    uLCD.locate(2,15);
    uLCD.color(TEXTGREEN);
    uLCD.text_width(1);
    uLCD.text_height(1);
    uLCD.printf("HEALTH:");

    // Draw top border of status bar
    uLCD.line(0, 118, 127, 118, GREEN);

    // change health bar if taken damage
    if(pHH == 0) {
        if(pH == 100) {
            uLCD.filled_rectangle(70,122,120,128,GREEN);
        } else if(pH == 80) {
            uLCD.filled_rectangle(70,122,110,128,GREEN);
            uLCD.filled_rectangle(110,122,120,128,RED);
        } else if(pH == 60) {
            uLCD.filled_rectangle(70,122,100,128,GREEN);
            uLCD.filled_rectangle(100,122,120,128,RED);
        } else if(pH == 40) {
            uLCD.filled_rectangle(70,122,90,128,GREEN);
            uLCD.filled_rectangle(90,122,120,128,RED);
        } else if(pH == 20) {
            uLCD.filled_rectangle(70,122,80,128,GREEN);
            uLCD.filled_rectangle(80,122,120,128,RED);
        } else if(pH == 0) {
            uLCD.filled_rectangle(70,122,120,128,RED);
        }
    } else {
        if(pH == 100) {
            uLCD.filled_rectangle(70,122,120,128,BLUE);
        } else if(pH == 90) {
            uLCD.filled_rectangle(70,122,115,128,BLUE);
            uLCD.filled_rectangle(115,122,120,128,RED);
        } else if(pH == 80) {
            uLCD.filled_rectangle(70,122,110,128,BLUE);
            uLCD.filled_rectangle(110,122,120,128,RED);
        } else if(pH == 70) {
            uLCD.filled_rectangle(70,122,105,128,BLUE);
            uLCD.filled_rectangle(105,122,120,128,RED);
        } else if(pH == 60) {
            uLCD.filled_rectangle(70,122,100,128,BLUE);
            uLCD.filled_rectangle(100,122,120,128,RED);
        } else if(pH == 50) {
            uLCD.filled_rectangle(70,122,95,128,BLUE);
            uLCD.filled_rectangle(95,122,120,128,RED);
        } else if(pH == 40) {
            uLCD.filled_rectangle(70,122,90,128,BLUE);
            uLCD.filled_rectangle(90,122,120,128,RED);
        } else if(pH == 30) {
            uLCD.filled_rectangle(70,122,85,128,BLUE);
            uLCD.filled_rectangle(85,122,120,128,RED);
        } else if(pH == 20) {
            uLCD.filled_rectangle(70,122,80,128,BLUE);
            uLCD.filled_rectangle(80,122,120,128,RED);
        } else if(pH == 10) {
            uLCD.filled_rectangle(70,122,75,128,BLUE);
            uLCD.filled_rectangle(75,122,120,128,RED);
        } else if(pH == 0) {
            uLCD.filled_rectangle(70,122,120,128,RED);
        }
    }
}

// border surrounding map
void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, BLACK); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, BLACK); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, BLACK); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, BLACK); // Right
}

// prints ghost in bottom left corner if omni_mode is active
void print_omni()
{
    static int omni_sprite[1][121] = {
        {
            BLACK, BLACK, BLACK, BLACK, 0xffffffff, 0xffffffff, 0xffffffff, BLACK, BLACK, BLACK, BLACK,
            BLACK, BLACK, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, BLACK, BLACK,
            BLACK, BLACK, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, BLACK, BLACK,
            BLACK, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xffffffff, BLACK,
            BLACK, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, BLACK,
            BLACK, 0xffffffff, BLACK, 0xffffffff, BLACK, 0xffffffff, BLACK, 0xffffffff, BLACK, 0xffffffff, BLACK
        }
    };

    uLCD.BLIT(0, 119, 11, 11, &omni_sprite[0][0]);
}

// clears ghost sprite if omni_mode is disabled
void clear_omni()
{
    uLCD.filled_rectangle(0,119,11,128, BLACK);
}